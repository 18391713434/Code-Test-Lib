request对象和response对象：


##Request:
    1、request对象和response对象的原理
        1、request和response对象都是由服务器创建的。我们来使用它们
        2、request对象是来获取请求消息的，response对象是来设置响应消息的


@WebServlet("/dmo1")
public class ServletDemo1 implements Servlet {
    @Override
    public void service(ServletRequest servletRequest, ServletResponse servletResponse) throws ServletException, IOException {

    }
}
http://localhost/day14/demo1-------请求（请求消息）--》    1、tomcat服务器会根据请求url中的资源路径，创建对应的ServletDemo1对象。
                                                          2、tomcat服务器，会创建request和response对象，request对象中封装请求消息数据
                                                          3、tomcat将request和response两个对象创建给service方法，并且调用service方法。
                                                          4、程序员可以通过request对象获取请求消息数据，通过response对象设置响应消息数据
                                                          5、服务器在给浏览器作出响应之前，会从response对象中拿程序员设置的响应消息数据


      2、request对象继承体系结构：
        ServletRequest     --------接口
            |继承
        HttpServletRequest   ---------接口
            |实现
        org.apache.catalina.connector.RequestFacade   类（tomcat创建）可打开tomcat源码查看


      3、request：
              1、获取请求消息数据
                1、获取请求行数据
                    *   GET/demo1?name=zhangsan HTTP/1.1
                    *方法：
                        1、获取请求方式：GET
                            *String getMethod
                      * 2、获取虚拟目录：/day14
                            *String getContextPath()
                        3、获取Servlet路径：/demo1
                            *String getServletPath()
                        4、获取get请求方式请求参数：name=zhangsan
                            *String getQueryString()
                      * 5、获取请求URI：/day14/demo1
                            *String getRequestURI():  /day14/demo1
                            *StringBuffer getRequestURL():  http://localhost/day14/demo1
                        6、获取协议及版本：HTTP/1.1
                            *String getProtocol()
                        7、获取客户机的IP地址：
                            *String getRemoteAddr()

                        *URL:统一资源定位符：http://localhost/Test/RequestDemo1   中华人民共和国
                        *URI:同一资源标识符：/Test/RequestDemo1       共和国






                2、获取请求头数据
                    *方法：
                        *String getHeader(String name):通过请求头的名称获取请求头的值
                        *Enumeration<String> getHeaderNames():获取所有请求头的名称    返回继承于迭代器的接口实现类  可当作迭代器使用



                3、获取请求体数据
                    *请求体：只有POST请求方式，才有请求体，在请求体中封装了POST请求的请求参数
                    *步骤：
                        1、获取流对象    字节流和字符流
                            *BufferedReader getReader():获取字符输入流，只能操作字符数据
                            *ServletInputStream getInputStream():获取字节输入流，可以操作所有类型数据
                                *文件上传知识点讲解
                        2、再从流对象中拿数据

              2、其他功能：
                    1、获取请求参数通用方式:无论get还是post请求都可以用以下方式获取请求参数
                       1、String getParameter(String name):根据参数名称获取参数值
                       2、String[] getParameterValues(String name)：根据参数名称获取参数值的数组   hobby=xx&hobby=xx
                       3、Enumeration<String> getParameterNames(): 获取所有请求的参数名称
                       4、Map<String,String[]>getParameterMap():获取所有参数的Map集合

                       *中文乱码问题：
                        *get方式：tomcat8已经将get方式乱码问题解决了
                        *post方式：会乱码
                            *解决：在获取参数前，设置request的编码
                              //设置流的编码
                                    req.setCharacterEncoding("utf-8");




                    2、请求转发：一种服务器内部的资源跳转方式   在/Test目录下的AServlet向BServlet跳转
                        1、步骤：
                            1、通过request对象获取请求跳转器对象：RequestDispatcher getRequestDispatcher(String path);
                            2、使用RequestDispatcher对象来进行转发：forward(ServletRequest req, ServletResponse resp);
                        2、特点：
                            1、浏览器地址栏路径不发生变化
                            2、只能转发到当前服务器内部资源中
                            3、转发是一次请求

                    3、共享数据
                        *域对象：一个有作用范围的对象，可以在范围内共享数据
                        *request域：表示一次请求的范围，一般用于请求转发的多个资源中共享数据
                        *方法：
                            1、setAttribute(String name,Object obj):存储数据
                            2、getAttribute(String name):通过键获取值
                            3、removeAttribute(String name):移除键值对



                    4、获取ServletContext
                        *ServletContext getServletcontext()
