<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="com.itcast.dao.IUserDao" >

    <!--当实体类的属性名和数据库中的列名不对应时的两种处理方法-->
    <!--修改返回类型为resultMap-->
    <resultMap id="userMap" type="com.itcast.domain.User">
        <!--主键字段的对应-->
        <id property="userId" column="id"></id>
        <!--非主键对应字段-->
        <result property="userName" column="username"></result>
        <result property="userAddress" column="address"></result>
        <result property="userSex" column="sex"></result>
        <result property="userBirthday" column="birthday"></result>
    </resultMap>
   <!-- 查询所有-->
    <select id="findAll" resultMap="userMap">
 <!--  select id as userId,username as userName,address as userAddress,sex as userSex,birthday as userBirthday  from user;-->
        select * from user;
    </select>


    <!--保存用户-->
    <update id="saveUser" parameterType="com.itcast.domain.User" >
        <!--配置插入操作后，获取插入数据的id-->
        <selectKey keyProperty="id" keyColumn="id" resultType="int" order="AFTER">
            select last_insert_id();
        </selectKey>
        insert into user(username,address,sex,birthday)values(#{username},#{address},#{sex},#{birthday});
    </update>


    <update id="updateUser" parameterType="com.itcast.domain.User">
        update user set username=#{username},address=#{address},sex=#{sex},birthday=#{birthday} where id=#{id};

    </update>

    <delete id="deleteUser" parameterType="java.lang.Integer">
        delete from user where id = #{uid};
     </delete>

    
    <select id="findById" parameterType="java.lang.Integer" resultType="com.itcast.domain.User">
        select * from user where id = #{uid};
    </select>

    <select id="findByName" parameterType="java.lang.String" resultType="com.itcast.domain.User">
        select * from user where username like #{uname};
    </select>


    <select id="findTotal" resultType="java.lang.Integer">
        select count(*) from user;
    </select>
    
    
    <!--根据queryVo的条件查询用户-->
    <select id="findUserByVo" parameterType="com.itcast.domain.QueryVo" resultType="com.itcast.domain.User">
        select * from user where username like #{user.username}
   </select>

</mapper>